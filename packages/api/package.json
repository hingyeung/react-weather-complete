{
  "name": "weather-api-server",
  "version": "1.0.0",
  "description": "A simple server that proxies requests to Dark Sky API.",
  "main": "index.js",
  "engines": {
    "node": ">=12.13 <13"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "check": "gts check",
    "clean": "gts clean",
    "compile": "tsc -p .",
    "watch": "tsc -w -p .",
    "fix": "gts fix",
    "prepare": "npm run compile",
    "pretest": "npm run compile",
    "posttest": "npm run check",
    "build": "npm run package",
    "package": "rm -rf ./dist && npm run compile && infrastructure/scripts/package.sh",
    "synth:api": "npm run package && CDK_STACK_NAME=$npm_config_stack_name CDK_STACK_ENV=$npm_config_env AWS_PROFILE=samuelli-$npm_config_env cdk synth --app dist/infrastructure/api-infra.js",
    "deploy:api": "npm run package && CDK_STACK_NAME=$npm_config_stack_name CDK_STACK_ENV=$npm_config_env AWS_PROFILE=samuelli-$npm_config_env cdk deploy --app dist/infrastructure/api-infra.js",
    "diff:api": "npm run package && CDK_STACK_NAME=$npm_config_stack_name CDK_STACK_ENV=$npm_config_env AWS_PROFILE=samuelli-$npm_config_env cdk diff --app dist/infrastructure/api-infra.js",
    "destroy:api": "CDK_STACK_NAME=$npm_config_stack_name CDK_STACK_ENV=$npm_config_env AWS_PROFILE=samuelli-$npm_config_env cdk destroy --app dist/infrastructure/api-infra.js",
    "synth:api:no-staging": "mkdir -p ./tmp && npm run package && CDK_STACK_NAME=$npm_config_stack_name CDK_STACK_ENV=$npm_config_env AWS_PROFILE=samuelli-$npm_config_env cdk synth --app dist/infrastructure/api-infra.js --no-staging |tee  ./tmp/cf_template_from_cdk.yaml",
    "//": "The function name 'weatherApiFunction4ABE91DF' is extracted from cdk synth output MANUALLY. See the CDK code for more details.",
    "invoke": "npm run synth:api:no-staging --env=test && sam local invoke 'weatherApiFunction4ABE91DF' --template ./tmp/cf_template_from_cdk.yaml -e test/data/events/apigateway-event.json"
  },
  "author": "Samuel Li <samli@samuelli.net>",
  "license": "ISC",
  "devDependencies": {
    "@types/aws-lambda": "^8.10.11",
    "gts": "^0.8.0",
    "aws-cdk": "^1.18.0",
    "@aws-cdk/assert": "^1.18.0",
    "@types/jest": "^24.0.22",
    "jest": "^24.9.0",
    "ts-jest": "^24.1.0",
    "ts-node": "^8.1.0",
    "@types/node": "^12.12.11",
    "typescript": "~3.7.2",
    "@aws-cdk/aws-certificatemanager": "^1.17.1",
    "@aws-cdk/aws-route53": "^1.17.1",
    "@aws-cdk/aws-route53-targets": "^1.17.1",
    "@aws-cdk/aws-s3": "^1.17.1",
    "@aws-cdk/aws-s3-deployment": "^1.17.1",
    "@aws-cdk/core": "^1.17.1"
  },
  "dependencies": {
    "dotenv": "^8.2.0",
    "axios": "^0.18.0",
    "source-map-support": "^0.5.16"
  }
}
